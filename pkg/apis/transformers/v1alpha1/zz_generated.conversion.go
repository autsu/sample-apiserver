//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	transformers "k8s.io/sample-apiserver/pkg/apis/transformers"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Autobot)(nil), (*transformers.Autobot)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Autobot_To_transformers_Autobot(a.(*Autobot), b.(*transformers.Autobot), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformers.Autobot)(nil), (*Autobot)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_Autobot_To_v1alpha1_Autobot(a.(*transformers.Autobot), b.(*Autobot), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AutobotList)(nil), (*transformers.AutobotList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AutobotList_To_transformers_AutobotList(a.(*AutobotList), b.(*transformers.AutobotList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformers.AutobotList)(nil), (*AutobotList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_AutobotList_To_v1alpha1_AutobotList(a.(*transformers.AutobotList), b.(*AutobotList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Decepticon)(nil), (*transformers.Decepticon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Decepticon_To_transformers_Decepticon(a.(*Decepticon), b.(*transformers.Decepticon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformers.Decepticon)(nil), (*Decepticon)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_Decepticon_To_v1alpha1_Decepticon(a.(*transformers.Decepticon), b.(*Decepticon), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DecepticonList)(nil), (*transformers.DecepticonList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DecepticonList_To_transformers_DecepticonList(a.(*DecepticonList), b.(*transformers.DecepticonList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformers.DecepticonList)(nil), (*DecepticonList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_DecepticonList_To_v1alpha1_DecepticonList(a.(*transformers.DecepticonList), b.(*DecepticonList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*transformers.AutobotSpec)(nil), (*AutobotSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_AutobotSpec_To_v1alpha1_AutobotSpec(a.(*transformers.AutobotSpec), b.(*AutobotSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*transformers.AutobotStatus)(nil), (*AutobotStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_AutobotStatus_To_v1alpha1_AutobotStatus(a.(*transformers.AutobotStatus), b.(*AutobotStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*transformers.DecepticonSpec)(nil), (*DecepticonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_DecepticonSpec_To_v1alpha1_DecepticonSpec(a.(*transformers.DecepticonSpec), b.(*DecepticonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*transformers.DecepticonStatus)(nil), (*DecepticonStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformers_DecepticonStatus_To_v1alpha1_DecepticonStatus(a.(*transformers.DecepticonStatus), b.(*DecepticonStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AutobotSpec)(nil), (*transformers.AutobotSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AutobotSpec_To_transformers_AutobotSpec(a.(*AutobotSpec), b.(*transformers.AutobotSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AutobotStatus)(nil), (*transformers.AutobotStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AutobotStatus_To_transformers_AutobotStatus(a.(*AutobotStatus), b.(*transformers.AutobotStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DecepticonSpec)(nil), (*transformers.DecepticonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DecepticonSpec_To_transformers_DecepticonSpec(a.(*DecepticonSpec), b.(*transformers.DecepticonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DecepticonStatus)(nil), (*transformers.DecepticonStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DecepticonStatus_To_transformers_DecepticonStatus(a.(*DecepticonStatus), b.(*transformers.DecepticonStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Autobot_To_transformers_Autobot(in *Autobot, out *transformers.Autobot, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_AutobotSpec_To_transformers_AutobotSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_AutobotStatus_To_transformers_AutobotStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Autobot_To_transformers_Autobot is an autogenerated conversion function.
func Convert_v1alpha1_Autobot_To_transformers_Autobot(in *Autobot, out *transformers.Autobot, s conversion.Scope) error {
	return autoConvert_v1alpha1_Autobot_To_transformers_Autobot(in, out, s)
}

func autoConvert_transformers_Autobot_To_v1alpha1_Autobot(in *transformers.Autobot, out *Autobot, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_transformers_AutobotSpec_To_v1alpha1_AutobotSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_transformers_AutobotStatus_To_v1alpha1_AutobotStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_transformers_Autobot_To_v1alpha1_Autobot is an autogenerated conversion function.
func Convert_transformers_Autobot_To_v1alpha1_Autobot(in *transformers.Autobot, out *Autobot, s conversion.Scope) error {
	return autoConvert_transformers_Autobot_To_v1alpha1_Autobot(in, out, s)
}

func autoConvert_v1alpha1_AutobotList_To_transformers_AutobotList(in *AutobotList, out *transformers.AutobotList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]transformers.Autobot, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Autobot_To_transformers_Autobot(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_AutobotList_To_transformers_AutobotList is an autogenerated conversion function.
func Convert_v1alpha1_AutobotList_To_transformers_AutobotList(in *AutobotList, out *transformers.AutobotList, s conversion.Scope) error {
	return autoConvert_v1alpha1_AutobotList_To_transformers_AutobotList(in, out, s)
}

func autoConvert_transformers_AutobotList_To_v1alpha1_AutobotList(in *transformers.AutobotList, out *AutobotList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Autobot, len(*in))
		for i := range *in {
			if err := Convert_transformers_Autobot_To_v1alpha1_Autobot(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_transformers_AutobotList_To_v1alpha1_AutobotList is an autogenerated conversion function.
func Convert_transformers_AutobotList_To_v1alpha1_AutobotList(in *transformers.AutobotList, out *AutobotList, s conversion.Scope) error {
	return autoConvert_transformers_AutobotList_To_v1alpha1_AutobotList(in, out, s)
}

func autoConvert_v1alpha1_AutobotSpec_To_transformers_AutobotSpec(in *AutobotSpec, out *transformers.AutobotSpec, s conversion.Scope) error {
	// WARNING: in.GenericSpec requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_transformers_AutobotSpec_To_v1alpha1_AutobotSpec(in *transformers.AutobotSpec, out *AutobotSpec, s conversion.Scope) error {
	// WARNING: in.Mode requires manual conversion: does not exist in peer-type
	// WARNING: in.Name requires manual conversion: does not exist in peer-type
	// WARNING: in.Strength requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_AutobotStatus_To_transformers_AutobotStatus(in *AutobotStatus, out *transformers.AutobotStatus, s conversion.Scope) error {
	// WARNING: in.GenericStatus requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_transformers_AutobotStatus_To_v1alpha1_AutobotStatus(in *transformers.AutobotStatus, out *AutobotStatus, s conversion.Scope) error {
	// WARNING: in.HP requires manual conversion: does not exist in peer-type
	// WARNING: in.Status requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_Decepticon_To_transformers_Decepticon(in *Decepticon, out *transformers.Decepticon, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_DecepticonSpec_To_transformers_DecepticonSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_DecepticonStatus_To_transformers_DecepticonStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Decepticon_To_transformers_Decepticon is an autogenerated conversion function.
func Convert_v1alpha1_Decepticon_To_transformers_Decepticon(in *Decepticon, out *transformers.Decepticon, s conversion.Scope) error {
	return autoConvert_v1alpha1_Decepticon_To_transformers_Decepticon(in, out, s)
}

func autoConvert_transformers_Decepticon_To_v1alpha1_Decepticon(in *transformers.Decepticon, out *Decepticon, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_transformers_DecepticonSpec_To_v1alpha1_DecepticonSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_transformers_DecepticonStatus_To_v1alpha1_DecepticonStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_transformers_Decepticon_To_v1alpha1_Decepticon is an autogenerated conversion function.
func Convert_transformers_Decepticon_To_v1alpha1_Decepticon(in *transformers.Decepticon, out *Decepticon, s conversion.Scope) error {
	return autoConvert_transformers_Decepticon_To_v1alpha1_Decepticon(in, out, s)
}

func autoConvert_v1alpha1_DecepticonList_To_transformers_DecepticonList(in *DecepticonList, out *transformers.DecepticonList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]transformers.Decepticon, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Decepticon_To_transformers_Decepticon(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_DecepticonList_To_transformers_DecepticonList is an autogenerated conversion function.
func Convert_v1alpha1_DecepticonList_To_transformers_DecepticonList(in *DecepticonList, out *transformers.DecepticonList, s conversion.Scope) error {
	return autoConvert_v1alpha1_DecepticonList_To_transformers_DecepticonList(in, out, s)
}

func autoConvert_transformers_DecepticonList_To_v1alpha1_DecepticonList(in *transformers.DecepticonList, out *DecepticonList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Decepticon, len(*in))
		for i := range *in {
			if err := Convert_transformers_Decepticon_To_v1alpha1_Decepticon(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_transformers_DecepticonList_To_v1alpha1_DecepticonList is an autogenerated conversion function.
func Convert_transformers_DecepticonList_To_v1alpha1_DecepticonList(in *transformers.DecepticonList, out *DecepticonList, s conversion.Scope) error {
	return autoConvert_transformers_DecepticonList_To_v1alpha1_DecepticonList(in, out, s)
}

func autoConvert_v1alpha1_DecepticonSpec_To_transformers_DecepticonSpec(in *DecepticonSpec, out *transformers.DecepticonSpec, s conversion.Scope) error {
	// WARNING: in.GenericSpec requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_transformers_DecepticonSpec_To_v1alpha1_DecepticonSpec(in *transformers.DecepticonSpec, out *DecepticonSpec, s conversion.Scope) error {
	// WARNING: in.Mode requires manual conversion: does not exist in peer-type
	// WARNING: in.Name requires manual conversion: does not exist in peer-type
	// WARNING: in.Strength requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_DecepticonStatus_To_transformers_DecepticonStatus(in *DecepticonStatus, out *transformers.DecepticonStatus, s conversion.Scope) error {
	// WARNING: in.GenericStatus requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_transformers_DecepticonStatus_To_v1alpha1_DecepticonStatus(in *transformers.DecepticonStatus, out *DecepticonStatus, s conversion.Scope) error {
	// WARNING: in.HP requires manual conversion: does not exist in peer-type
	// WARNING: in.Status requires manual conversion: does not exist in peer-type
	return nil
}
